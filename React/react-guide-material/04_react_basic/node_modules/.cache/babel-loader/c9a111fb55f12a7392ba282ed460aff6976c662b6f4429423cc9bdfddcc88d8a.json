{"ast":null,"code":"var _jsxFileName = \"/Users/hhs/Desktop/SelfStudy/React/react-guide-material/04_react_basic/src/080_expr_in_jsx/end/components/Expression.js\";\n/* POINT JSX には JavaScript 式を記述できる\nJSX 内の 波括弧 {...} で囲んだ部分は JavaScript 式として実行時に評価されます。\n */\nimport \"./Expression.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expression = () => {\n  const title = \"Expression\";\n  const arry = [\"item1\", \"item2\", \"item3\"];\n  const hello = arg => `${arg} Function`;\n  const jsx = /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Hello JSX\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 15\n  }, this);\n  console.log(jsx);\n  return (\n    /*#__PURE__*/\n    // POINT {...} は属性値にも使用できます。\n    _jsxDEV(\"div\", {\n      className: title.toLowerCase(),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello \" + title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: arry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: hello(\"Hello\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello JSX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this), jsx]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = Expression;\nexport default Expression;\nvar _c;\n$RefreshReg$(_c, \"Expression\");","map":{"version":3,"names":["Expression","title","arry","hello","arg","jsx","console","log","toLowerCase"],"sources":["/Users/hhs/Desktop/SelfStudy/React/react-guide-material/04_react_basic/src/080_expr_in_jsx/end/components/Expression.js"],"sourcesContent":["/* POINT JSX には JavaScript 式を記述できる\nJSX 内の 波括弧 {...} で囲んだ部分は JavaScript 式として実行時に評価されます。\n */\nimport \"./Expression.css\";\n\nconst Expression = () => {\n  \n  const title = \"Expression\";\n  const arry = [\"item1\", \"item2\", \"item3\"];\n  const hello = (arg) => `${arg} Function`;\n  const jsx = <h3>Hello JSX</h3>;\n  \n  console.log(jsx);\n\n  return (\n    // POINT {...} は属性値にも使用できます。\n    <div className={title.toLowerCase()}>\n      {/* POINT 波括弧内は実行時に評価されます。 */}\n      <h3>{\"Hello \" + title}</h3>\n      {/* POINT 配列を子要素に指定すると配列の要素が値の列として展開されます。 */}\n      <h3>{arry}</h3>\n      {/* POINT 関数を呼び出して return した値を埋め込むこともできます。 */}\n      <h3>{hello(\"Hello\")}</h3>\n      {/* POINT 波括弧内に JSX を記述することもできます。*/}\n      {<h3>Hello JSX</h3>}\n      {/* POINT 変数に代入したJSXも埋め込めます。 */}\n      {jsx}\n    </div>\n  );\n};\n\nexport default Expression;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAO,kBAAkB;AAAC;AAE1B,MAAMA,UAAU,GAAG,MAAM;EAEvB,MAAMC,KAAK,GAAG,YAAY;EAC1B,MAAMC,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxC,MAAMC,KAAK,GAAIC,GAAG,IAAM,GAAEA,GAAI,WAAU;EACxC,MAAMC,GAAG,gBAAG;IAAA,UAAI;EAAS;IAAA;IAAA;IAAA;EAAA,QAAK;EAE9BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAEhB;IAAA;IACE;IACA;MAAK,SAAS,EAAEJ,KAAK,CAACO,WAAW,EAAG;MAAA,wBAElC;QAAA,UAAK,QAAQ,GAAGP;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAE3B;QAAA,UAAKC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAEf;QAAA,UAAKC,KAAK,CAAC,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAExB;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,EAElBE,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;AAEV,CAAC;AAAC,KAxBIL,UAAU;AA0BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}